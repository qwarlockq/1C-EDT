
//////////////////////////
//	  СОБЫТИЯ ФОРМЫ		//
//////////////////////////

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	СкоростьИгры = 0.1;
	
	ШиринаПоля = 50;
	ВысотаПоля = 50;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеВыбор(Элемент, Область, СтандартнаяОбработка)
	
	Если ЭтаФорма.Значения[Область.Верх-1]["К" + Область.Право] Тогда
		Область.ЦветФона = Новый Цвет;
	Иначе
		Область.ЦветФона = WebЦвета.Черный;
	КонецЕсли;	
	
	УстановитьТочку(Область.Верх, Область.Право);	
	
КонецПроцедуры


//////////////////////////
//	  	 КНОПКИ			//
//////////////////////////

&НаКлиенте
Процедура Старт(Команда)
	
	Если ПолеСформировано Тогда
		
		Поколение = 0;
		Стоп 	  = Ложь;
		
		ПодключитьОбработчикОжидания("Жизнь", СкоростьИгры, Истина);
		
	Иначе
		
		Сообщить("Поле не сформировано. Необходимо нажать на кнопку ""Сформировать поле"".");
		
	КонецЕсли;
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура Стоп(Команда)
	
	Стоп = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьПоле(Команда)
		
	ВывестиПоле();
	ЗаполнитьТЗПоля();
	
КонецПроцедуры


//////////////////////////
//	ОСНОВНЫЕ ПРОЦЕДУРЫ	//
//////////////////////////

&НаКлиенте
Процедура Жизнь()
	
	ПредыдущееЗначениеМассива = Неопределено;
	СписокИзмененныхКлеток.Очистить();
	
	НомерСтроки = 1;
	Для Каждого Строка Из ЭтаФорма.Значения Цикл
				
		Для К = 1 По ШиринаПоля Цикл			
			
			Если К = 1 Тогда
				НоваяСтрока = Истина;
			Иначе
				НоваяСтрока = Ложь;
			КонецЕсли;
			
			МассивСоседнихКлеток = ЗаполнитьМассивСоседнихКлеток(НомерСтроки, К, НоваяСтрока, ПредыдущееЗначениеМассива);			
			
			СуммаЖивых = 0;
			Для Каждого Клетка Из МассивСоседнихКлеток Цикл
				СуммаЖивых = СуммаЖивых + Клетка.Значение;
			КонецЦикла;
			
			Если Строка["К" + К] Тогда
				
				Если СуммаЖивых < 2 Или СуммаЖивых > 3 Тогда					
					ДобавитьКИзмененным(НомерСтроки, К, Ложь);					
				КонецЕсли;
				
			Иначе
				
				Если СуммаЖивых = 3 Тогда
					ДобавитьКИзмененным(НомерСтроки, К, Истина);
				КонецЕсли;
				
			КонецЕсли;			
			
			Если Строка["К" + К] Тогда
				Поле.Область(НомерСтроки, К, НомерСтроки, К).ЦветФона = WebЦвета.Черный;
			Иначе
				Поле.Область(НомерСтроки, К, НомерСтроки, К).ЦветФона = Новый Цвет;
			КонецЕсли;
			
			ПредыдущееЗначениеМассива = МассивСоседнихКлеток;
			
		КонецЦикла;
		
		НомерСтроки = НомерСтроки + 1;
		
	КонецЦикла;	
	
	Для Каждого Строка Из СписокИзмененныхКлеток Цикл
		
		ЭтаФорма.Значения[Строка.Строка-1]["К" + Строка.Колонка] = Строка.Значение;
		
		Если Строка.Значение Тогда
			Поле.Область(Строка.Строка, Строка.Колонка, Строка.Строка, Строка.Колонка).ЦветФона = WebЦвета.Черный;
		Иначе
			Поле.Область(Строка.Строка, Строка.Колонка, Строка.Строка, Строка.Колонка).ЦветФона = Новый Цвет;
		КонецЕсли;
		
	КонецЦикла;
	
	Поколение = Поколение + 1;
	
	Если Стоп Тогда
		Возврат;
	КонецЕсли;
	
	ПодключитьОбработчикОжидания("Жизнь", СкоростьИгры, Истина);
	
КонецПроцедуры


///////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ //
///////////////////////////////

&НаСервере
Процедура ВывестиПоле()
	
	Поле.Очистить();
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	Макет = ОбработкаОбъект.ПолучитьМакет("Поле");
	
	Для Сч = 1 По ВысотаПоля-1 Цикл
		
		Колонка = Макет.ПолучитьОбласть("Колонка");
		
		Поле.Вывести(Колонка);
		
	КонецЦикла;
	
	Колонка = Поле.ПолучитьОбласть(1, 1, ВысотаПоля, 1);
	Для Сч = 1 По ШиринаПоля Цикл
		
		Поле.Присоединить(Колонка);
		
	КонецЦикла;
	
	ПолеСформировано = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТЗПоля()
	
	СписокРеквизитов = ЭтаФорма.ПолучитьРеквизиты();
	Для Каждого Строка Из СписокРеквизитов Цикл		                                                                
		
		Если Строка.Имя = "Значения" Тогда
			
			МассивУдаляемыхРеквизитов = Новый Массив;
			МассивУдаляемыхРеквизитов.Добавить("Значения");
			
			ИзменитьРеквизиты(, МассивУдаляемыхРеквизитов);
			
			Прервать;
			
		КонецЕсли;		
		
	КонецЦикла;
	
	МассивТипаВыбора = Новый Массив;
	МассивТипаВыбора.Добавить(Тип("ТаблицаЗначений"));
	
	ОписаниеТипаВыбора = Новый ОписаниеТипов(МассивТипаВыбора);
	
	МассивРеквизитов = Новый Массив;
	МассивРеквизитов.Добавить(Новый РеквизитФормы("Значения", ОписаниеТипаВыбора, "", "Значения"));
	
	ТЗПоля = Новый ТаблицаЗначений;
	
	Для Сч = 1 По ШиринаПоля Цикл
		ТЗПоля.Колонки.Добавить("К" + Сч, Новый ОписаниеТипов("Булево"));		
	КонецЦикла;
	
	Для Сч = 1 По ВысотаПоля Цикл
		ТЗПоля.Добавить();
	КонецЦикла;
	
	Для Каждого Колонка Из ТЗПоля.Колонки Цикл		
		МассивРеквизитов.Добавить(Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения, "Значения"));		
	КонецЦикла;
	
	ИзменитьРеквизиты(МассивРеквизитов); 
	
	ЗначениеВРеквизитФормы(ТЗПоля, "Значения");
	
КонецПроцедуры

&НаСервере
Процедура УстановитьТочку(Строка, Колонка)
	
	ТЗПоля = РеквизитФормыВЗначение("Значения");
	
	ТЗПоля[Строка-1]["К" + Колонка] = Не ТЗПоля[Строка-1]["К" + Колонка];
	
	ЗначениеВРеквизитФормы(ТЗПоля, "Значения");
	
КонецПроцедуры

&НаКлиенте
Функция ЗаполнитьМассивСоседнихКлеток(Строка, Колонка, НоваяСтрока, ПредыдущееЗначениеМассива)
			
	МассивСоседнихКлеток = Новый Массив;
	Для Сч = 1 По 8 Цикл
		СтруктураКлетки = Новый Структура("С, К, Значение", 0, 0, Ложь);
		МассивСоседнихКлеток.Добавить(СтруктураКлетки);		
	КонецЦикла;
	
	// Начнем считать с левого верхнего угла
	
	// [1, 1]:
	Если Строка > 1 И Колонка > 1 Тогда
		
		Клетка11 = МассивСоседнихКлеток[0];		
		Если НоваяСтрока Тогда
			ЗаполнитьКлетку(Клетка11, Строка, Колонка, 1, 1);			
		Иначе			
			Клетка11.Значение = ПредыдущееЗначениеМассива[1].Значение;			
		КонецЕсли;		
		
	КонецЕсли;
	
	// [1, 2]:
	Если Строка > 1 Тогда
		
		Клетка12 = МассивСоседнихКлеток[1];		
		Если НоваяСтрока Тогда						
			ЗаполнитьКлетку(Клетка12, Строка, Колонка, 1, 0);			
		Иначе			
			Клетка12.Значение = ПредыдущееЗначениеМассива[2].Значение;			
		КонецЕсли;
		
	КонецЕсли;
	
	// [1, 3]:
	Если Строка > 1 И Колонка < ШиринаПоля Тогда
					
		Клетка13 = МассивСоседнихКлеток[2];		
		ЗаполнитьКлетку(Клетка13, Строка, Колонка, 1, -1);		
		
	КонецЕсли;
	
	// [2, 1]:
	Если Колонка > 1 Тогда
		
		Клетка21 = МассивСоседнихКлеток[3];		
		ЗаполнитьКлетку(Клетка21, Строка, Колонка, 0, 1);
		
	КонецЕсли;
	
	// [2, 3]:
	Если Колонка < ШиринаПоля Тогда
		
		Клетка23 = МассивСоседнихКлеток[4];		
		ЗаполнитьКлетку(Клетка23, Строка, Колонка, 0, -1);
		
	КонецЕсли;
	
	// [3, 1]:
	Если Строка < ВысотаПоля И Колонка > 1 Тогда
		
		Клетка31 = МассивСоседнихКлеток[5];		
		Если НоваяСтрока Тогда			
			ЗаполнитьКлетку(Клетка31, Строка, Колонка, -1, 1);		
		Иначе			
			Клетка31.Значение = ПредыдущееЗначениеМассива[6].Значение;			
		КонецЕсли;
		
	КонецЕсли;
	
	// [3, 2]:
	Если Строка < ВысотаПоля Тогда
		
		Клетка32 = МассивСоседнихКлеток[6];
		Если НоваяСтрока Тогда			
			ЗаполнитьКлетку(Клетка32, Строка, Колонка, -1, 0);			
		Иначе			
			Клетка32.Значение = ПредыдущееЗначениеМассива[7].Значение;			
		КонецЕсли;
		
	КонецЕсли;
	
	// [3, 3]:
	Если Строка < ВысотаПоля И Колонка < ШиринаПоля Тогда
		
		Клетка33 = МассивСоседнихКлеток[7];		
		ЗаполнитьКлетку(Клетка33, Строка, Колонка, -1, -1);
		
	КонецЕсли;
	
	Возврат МассивСоседнихКлеток;
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьКлетку(Клетка, Строка, Колонка, СдвигСтрока, СдвигКолонка)
	
	Клетка.С 		= Строка - СдвигСтрока;
	Клетка.К 		= Колонка - СдвигКолонка;
	Клетка.Значение = ЭтаФорма.Значения[Клетка.С-1]["К" + Клетка.К];
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьПоле()
	
	Поле.Очистить();
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьКИзмененным(Строка, Колонка, Значение)
	
	НоваяСтрока = СписокИзмененныхКлеток.Добавить();
	
	НоваяСтрока.Строка 	 = Строка;
	НоваяСтрока.Колонка  = Колонка;
	НоваяСтрока.Значение = Значение;
	
КонецПроцедуры
